package com.justin.cipher;

import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

public class UseCipher implements Cipherable{
	@Override
	public String useCipher(Map<Character, Character> charsMap, char[] charsArray) {
		
		//StringToArray stringToArray = new StringToArray();
		//char[] charsFromMessage = stringToArray.stringToArray(messageString);
		
		
		StringBuilder stringBuilder = new StringBuilder();
		for (char c : charsArray) {
			stringBuilder.append(charsMap.get(c));
		}
		return stringBuilder.toString();
	}

	@Override
	public String useDeCipher(Map<Character, Character> charsMap, char[] charsArray) {
		Map<Character, Character> tempCharsMap = new HashMap<>();
		
		for (Entry<Character, Character> c : charsMap.entrySet()) {
			tempCharsMap.put(c.getValue(), c.getKey());
		}
		
		return useCipher(tempCharsMap, charsArray);
	}
}
